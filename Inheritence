class Restaurant {
    String name;

    Restaurant(String name) {
        this.name = name;
    }

    int totalbill() {
        int k = (1000 + (1000 * 10) / 100);
        return k;

    }
    void display()
    {
        System.out.println("RESTAURANT NAME: "+this.name+". TOTAL BILL OF THE CUSTOMER: "+totalbill()+" taka");
    }
}
class fastfoodRestaurant extends Restaurant{
    fastfoodRestaurant(String name)
    {
        super(name);
    }
    int totalbill() {
        int k = (1000 + (1000 * 15) / 100);
        return k;
    }

}
class fineDinningRestaurant extends Restaurant{
    fineDinningRestaurant(String name)
    {
        super(name);
    }
    int totalbill() {
        int k = (1000 + (1000 * 10) / 100);
        return k;

    }
}
public class tawfiq
{
    public static void main(String[] args) {

Restaurant first1=new Restaurant("AL-BAIK");
fastfoodRestaurant second2=new fastfoodRestaurant("BFC");
fineDinningRestaurant third3=new fineDinningRestaurant("Frieolento");
first1.display();
second2.display();
third3.display();

    }
}








//Hierarchical Inheritance




 class restaurant {
     String name;
     String location;
     String phonenumber;

     restaurant(String name, String location, String phonenumber) {
         this.name = name;
         this.location = location;
         this.phonenumber = phonenumber;
     }

     int deliverytime() {
         return 20;
     }

     void display() {
         System.out.println("RESTAURANT NAME :" + name + " " + "LOCATION: " + location + " " + "NUMBER: " + phonenumber + " " + "DEIVERY TIME " + deliverytime());
     }

 }
class fastfood extends restaurant{

    fastfood(String name,String location,String phonenumber)
    {
        super(name,location,phonenumber);
    }
    int deliverytime()
    {
        return 40;
    }
  /* void display() {
        System.out.println("RESTAURANT NAME :" + name + " " + "LOCATION: " + location + " " + "NUMBER: " + phonenumber + " " + "DEIVERY TIME " + deliverytime());
    }*/

}
class finedine extends fastfood
{
   finedine(String name,String location,String phonenumber)
    {
        super(name,location,phonenumber);
    }
    int deliverytime()
    {
        return 10000;
    }
}
public class tawfiq
{
    public static void main(String[] args)
    {
        restaurant normal=new restaurant("ROSHNI FOOD.","JAMALKHAN.","01815130179");
        fastfood bfc=new fastfood("KUAR PAR.","JK.","546734");
        finedine kfc=new finedine("dostogir .","ceragi pahar","018888888");

        normal.display();
        bfc.display();
        kfc.display();
    }
}

//sir task:




class restaurant
{protected static final double tax=0.10;
     double foodprice;
    restaurant(double foodprice)
    {
        this.foodprice=foodprice;
    }
    int deliverytime()
    {
        return 40;
    }
    double calculatebill()
    {
        return foodprice+foodprice*tax;
    }
    void calculatetotalbill()
    {
        System.out.println("BILL: "+calculatebill());
    }
    void estimatedeliverytime()
    {
        System.out.println(deliverytime());
    }
}
class fastfood extends restaurant{
    private double tax=0.15;
    fastfood(double foodprice)
    {
        super(foodprice);
    }
    int deliverytime()
    {
        return 20;
    }double calculatebill()
    {
        return foodprice+foodprice*tax;
    }
    void calculatetotalbill()
    {
        System.out.println("BILL: "+calculatebill());
    }
    void estimatedeliverytime()
    {
        System.out.println(deliverytime());
    }
}
class finedine extends restaurant{

    finedine(double foodprice)
    {
        super(foodprice);
    }
   public int deliverytime()
    {
        return 60;
    }
   double calculatebill()
    {
        return foodprice+foodprice*tax;
    }
    void estimatedeliverytime()
    {
        System.out.println(deliverytime());
    }
    void calculatetotalbill()
    {
        System.out.println("BILL: "+calculatebill());
    }
}
public class tawfiq
{
    public  static void main(String args[])
{
    restaurant general=new restaurant(150);
    fastfood fastfood1=new fastfood(100);
    finedine finedine1=new finedine(200);
    general.estimatedeliverytime();
    general.calculatetotalbill();
    fastfood1.estimatedeliverytime();
    fastfood1.calculatetotalbill();
    finedine1.estimatedeliverytime();
    finedine1.calculatetotalbill();

}
}






//Exercise:8(a):INHERITENCE:





class employee
{
  public  String name;
  public int id;
  public String department;
  employee(String name,int id,String department)
  {
      this.name=name;
      this.id=id;
      this.department=department;
  }


  public double calculatepay()
  {
      return 0.0;
  }
  void displayinfo()
  {
      System.out.println("NAME: "+this.name+" ID: "+this.id+" department: "+this.department+" TOTALLY HAVE TO PAY :"+calculatepay());
  }


}
class fulltimeemployee extends employee{
    double fixedsalary;
    fulltimeemployee(String name,int id,String department,double fixedsalary) {
        super(name, id, department);
        this.fixedsalary = fixedsalary;
    }
        public double calculatepay()
        {
            return fixedsalary;
        }
    }

class parttimeemployee extends employee{double hourlyrate;
    int hoursworked;
    parttimeemployee(String name,int id,String department,double hourlyrate,int hoursworked)
    {
        super(name,id,department);;
        this.hourlyrate=hourlyrate;
        this.hoursworked=hoursworked;

    }


    public double calculatepay()
    {
        return hourlyrate*hoursworked;
    }
    }
    class contractemployee extends employee{double contractamount;String projectname;
        contractemployee(String name,int id,String department,double contractamount,String projectname)
        {
            super(name,id,department);;
           this.contractamount=contractamount;
           this.projectname=projectname;

        }
        public double calculatepay()
        {
            return contractamount;
        }
    }



public class tawfiq {
    public static void main(String[] args) {
employee e1=new employee("TAWFIQ",10986,"SWE");
fulltimeemployee e2=new fulltimeemployee("ABC",955,"PME",15500.00);
parttimeemployee e3=new parttimeemployee("NBS",20202,"CIVIL",235.00,9);
contractemployee e4=new contractemployee("dnfkherj",373863,"hijibiji",2345.05,"labor");
e1.displayinfo();
e2.displayinfo();
e3.displayinfo();
e4.displayinfo();
    }
}



